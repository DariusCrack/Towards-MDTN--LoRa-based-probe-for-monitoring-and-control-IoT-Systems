# main.py ‚Äî Control de rel√© ‚Äúactive-LOW‚Äù en LilyGO T3S3 (ESP32-S3)
# Pin de control: GPIO38

from machine import Pin

# Configuraci√≥n del pin de rel√©
RELAY_PIN = 16
# Asumimos rel√© active-LOW: 0 = cerrado (ON), 1 = abierto (OFF)
relay = Pin(RELAY_PIN, Pin.OUT, value=1)

def encender():
    relay.value(1)
    print("üîå Rel√© CERRADO ‚Üí regleta ENCENDIDA")

def apagar():
    relay.value(0)
    print("‚ùå Rel√© ABIERTO ‚Üí regleta APAGADA")

def cleanup():
    # Asegura estado OFF y libera el pin
    apagar()
    try:
        relay.init(Pin.IN)
    except Exception:
        pass
    print("üßπ Pin limpiado y reconfigurado como entrada")

def repl():
    print(f"‚öôÔ∏è  Control de rel√© iniciado en GPIO{RELAY_PIN}")
    print("Comandos: 'on' ‚Üí encender, 'off' ‚Üí apagar, 'exit' ‚Üí salir")
    while True:
        try:
            cmd = input("comando> ").strip().lower()
        except (EOFError, KeyboardInterrupt):
            print("\n‚è∏Ô∏è  Interrupci√≥n recibida. Saliendo‚Ä¶")
            break

        if cmd == "on":
            encender()
        elif cmd == "off":
            apagar()
        elif cmd == "exit":
            relay.value(1)
            print("üö™ Saliendo del programa.")
            break
        else:
            print("‚ùó Comando no v√°lido. Usa 'on', 'off' o 'exit'.")

    cleanup()

# Arranca el bucle de comandos
repl()
